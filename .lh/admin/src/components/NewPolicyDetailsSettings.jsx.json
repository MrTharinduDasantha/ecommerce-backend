{
    "sourceFile": "admin/src/components/NewPolicyDetailsSettings.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753159564185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753159564185,
            "name": "Commit-0",
            "content": "import React, { useState, lazy, Suspense } from \"react\";\r\nimport { FaEdit, FaEye, FaEyeSlash } from \"react-icons/fa\";\r\nimport toast from \"react-hot-toast\";\r\nimport { updatePolicyDetailsSetting } from \"../api/setting\";\r\n\r\n// Dynamically import react-quill-new for client-side rendering\r\nconst ReactQuill = lazy(() =>\r\n  import(\"react-quill-new\").then((mod) => {\r\n    import(\"react-quill-new/dist/quill.snow.css\").catch((err) => {\r\n      console.error(\"Failed to load react-quill-new styles:\", err);\r\n    });\r\n    return mod;\r\n  }).catch((err) => {\r\n    console.error(\"Failed to load react-quill-new:\", err);\r\n    throw err;\r\n  })\r\n);\r\n\r\nconst NewPolicyDetailsSettings = ({ onNext, isLoading: externalLoading }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEditing, setIsEditing] = useState({\r\n    refundPolicy: false,\r\n    termsAndConditions: false,\r\n    privacyPolicy: false,\r\n    shippingPolicy: false,\r\n  });\r\n  const [policyDetails, setPolicyDetails] = useState({\r\n    refundPolicy: \"\",\r\n    termsAndConditions: \"\",\r\n    privacyPolicy: \"\",\r\n    shippingPolicy: \"\",\r\n  });\r\n\r\n  const handleEditToggle = (field) => {\r\n    setIsEditing((prev) => ({\r\n      ...prev,\r\n      [field]: !prev[field],\r\n    }));\r\n  };\r\n\r\n  const handleChange = (field, value) => {\r\n    setPolicyDetails((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsLoading(true);\r\n      await updatePolicyDetailsSetting(policyDetails);\r\n      toast.success(\"Policy details saved successfully\");\r\n      setIsEditing({\r\n        refundPolicy: false,\r\n        termsAndConditions: false,\r\n        privacyPolicy: false,\r\n        shippingPolicy: false,\r\n      });\r\n      if (onNext) {\r\n        onNext(); // Proceed to the next step (dashboard)\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message || \"Failed to save policy details\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderEditor = (field, label) => (\r\n    <div className=\"mb-6\">\r\n      <div className=\"flex justify-between items-center mb-2\">\r\n        <h3 className=\"text-lg font-semibold text-[#1D372E]\">{label}</h3>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => handleEditToggle(field)}\r\n          className=\"text-[#5CAF90] hover:text-[#4a9a7d]\"\r\n          disabled={isLoading || externalLoading}\r\n        >\r\n          {isEditing[field] ? (\r\n            <FaEyeSlash className=\"w-5 h-5\" />\r\n          ) : (\r\n            <FaEye className=\"w-5 h-5\" />\r\n          )}\r\n        </button>\r\n      </div>\r\n      {isEditing[field] ? (\r\n        <Suspense fallback={<div className=\"text-[#1D372E] p-4\">Loading editor...</div>}>\r\n          <ReactQuill\r\n            value={policyDetails[field] || \"\"}\r\n            onChange={(value) => handleChange(field, value)}\r\n            className=\"bg-white text-[#1D372E]\"\r\n            theme=\"snow\"\r\n            readOnly={isLoading || externalLoading}\r\n          />\r\n        </Suspense>\r\n      ) : (\r\n        <div\r\n          className=\"ql-editor bg-gray-50 p-4 rounded-md border border-[#1D372E] text-[#1D372E]\"\r\n          dangerouslySetInnerHTML={{ __html: policyDetails[field] || \"No content available\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"card bg-white shadow-md relative\">\r\n      <div className=\"card-body\">\r\n        <h2 className=\"text-2xl font-bold text-[#1D372E] mb-6\">Policy Details Settings</h2>\r\n        <form onSubmit={handleSave}>\r\n          {renderEditor(\"refundPolicy\", \"Refund Policy\")}\r\n          {renderEditor(\"termsAndConditions\", \"Terms and Conditions\")}\r\n          {renderEditor(\"privacyPolicy\", \"Privacy Policy\")}\r\n          {renderEditor(\"shippingPolicy\", \"Shipping Policy\")}\r\n          <div className=\"flex justify-end gap-2 mt-6\">\r\n            <button\r\n              type=\"submit\"\r\n              className={`btn btn-primary bg-[#5CAF90] border-none text-white btn-sm md:btn-md ${\r\n                isLoading || externalLoading ? \"cursor-not-allowed\" : \"\"\r\n              }`}\r\n              disabled={isLoading || externalLoading}\r\n            >\r\n              {isLoading || externalLoading ? (\r\n                <>\r\n                  <span className=\"loading loading-spinner loading-xs\"></span>\r\n                  Saving...\r\n                </>\r\n              ) : (\r\n                \"Save Changes\"\r\n              )}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary bg-[#1D372E] border-none text-white btn-sm md:btn-md\"\r\n              onClick={onNext}\r\n              disabled={isLoading || externalLoading}\r\n            >\r\n              Skip\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPolicyDetailsSettings;"
        }
    ]
}